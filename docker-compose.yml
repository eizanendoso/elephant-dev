version: '2.2'
services:

  elephant:
    container_name: elephant
    # image: elephant:prod
    build:
      context: ./searchui
      dockerfile: Dockerfile.prod
    tty: true
    volumes:
      - '.:/app'
      - '/app/node_modules'
    environment:
      - CHOKIDAR_USEPOLLING=true
    networks:
      - frontend
    labels:
      - "traefik.http.routers.elephant.rule=Host(`elefant.hiyachai.com`)"
      - "traefik.http.routers.elephant.tls.certresolver=myresolver"
      - "traefik.http.routers.elephant.tls=true"

  reverse-proxy:
    container_name: traefik
    # The official v2 Traefik docker image
    image: traefik:2.4
    # Enables the web UI and tells Traefik to listen to docker
    command: 
      - --api.insecure=true 
      - --providers.docker=true
      - --entrypoints.web.address=:80
      - --entrypoints.web-secure.address=:443
      - --certificatesResolvers.myresolver.acme.email=email@gmail.com
      - --certificatesResolvers.myresolver.acme.storage=acme.json
      - --certificatesResolvers.myresolver.acme.tlsChallenge=true
      # - --certificatesResolvers.myresolver.acme.httpchallenge.entrypoint=web
      - --log.level=debug
    ports:
      # The HTTP port
      - "80:80"
      - "443:443"
      # The Web UI (enabled by --api.insecure=true)
      - "8080:8080"
    volumes:
      # So that Traefik can listen to the Docker events
      - /var/run/docker.sock:/var/run/docker.sock
      - ./shared:/shared
      # - /my/host/acme.json:acme.json
      # - /opt/traefik/acme.json:acme.json
      # - /etc/letsencrypt/live/elefant.hiyachai.com:/etc/traefik/certs
      # - ./traefik:/etc/traefik
    networks:
      - frontend

volumes:
  data01:
    driver: local

networks:
  frontend:

